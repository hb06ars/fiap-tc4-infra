version: '3.9'

services:
  gerenciamento:
    image: postgres:latest
    container_name: gerenciamento
    restart: always
    environment:
      POSTGRES_USER: gerenciamento_user
      POSTGRES_PASSWORD: gerenciamento_pass
      POSTGRES_DB: gerenciamentodb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - infra_network

  flyway:
    image: flyway/flyway:latest
    container_name: flyway_migrations
    depends_on:
      - gerenciamento
    command: -url=jdbc:postgresql://gerenciamento:5432/gerenciamentodb -user=gerenciamento_user -password=gerenciamento_pass -locations=filesystem:/migrations -baselineOnMigrate=true migrate
    volumes:
      - ./migrations:/migrations
    networks:
      - infra_network

  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    networks:
      - infra_network
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    networks:
      - infra_network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    networks:
      - infra_network
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19092"
    depends_on:
      - kafka1

volumes:
  postgres_data:

# REDE
networks:
  infra_network:
    driver: bridge